{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAQC,SAASC,cAAe,kBAEhCC,GADOF,SAASC,cAAe,iBACtBD,SAASC,cAAe,oBACjCE,EAAOH,SAASC,cAAc,SAEhCG,EAAW,EACTC,EAAgB,SAACC,EAAUC,G,OAC/B,IAAIC,SAAQ,SAACC,EAASC,GACpBC,YAAW,WACOC,KAAKC,SAAW,GAE9BJ,EACE,8EAGFC,EACE,4E,GAGHH,E,KAGDO,EAAiB,SAAAC,G,OACrBX,GAAa,EACbY,EAAAnB,GAASoB,OAAOC,QACd,uBAAwCC,OAAff,EAAS,QAAuCe,QAAjC,IAAIC,MAAOC,UAAYC,EAAU,M,EAGvEC,EAAgB,SAAAR,G,OACpBX,GAAa,EACbY,EAAAnB,GAASoB,OAAOO,QACd,sBAAqCL,OAAff,EAAS,QAAuCe,QAAjC,IAAIC,MAAOC,UAAYC,EAAU,M,EAItEA,EAAY,EAChBnB,EAAKsB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACNL,GAAY,IAAIF,MAAOC,UAEvB,IAAK,IAAIO,EAAI,EAAGA,EAAI,CAAC1B,EAAO2B,OAAQD,IAClCvB,EAAc,EAAGN,EAAM8B,OAAOC,KAAKhB,GAAgBiB,MAAMR,GAE3DnB,EAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst delay = document.querySelector(`[name=\"delay\"]`);\nconst step = document.querySelector(`[name=\"step\"]`);\nconst amount = document.querySelector(`[name=\"amount\"]`);\nconst form = document.querySelector('.form');\nlet shouldResolve = 0;\nlet position = 0;\nconst createPromise = (position, delay) =>\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(\n          '`✅ Fulfilled promise ${position} in ${new Date().getTime() - clickTime}ms`'\n        );\n      } else {\n        reject(\n          '`❌ Rejected promise ${position} in ${new Date().getTime() - clickTime}ms`'\n        );\n      }\n    }, delay);\n  });\n\nconst resolveHandler = result => (\n  (position += 1),\n  Notiflix.Notify.success(\n    `✅ Fulfilled promise ${position} in ${new Date().getTime() - clickTime}ms`\n  )\n);\nconst rejectHandler = result => (\n  (position += 1),\n  Notiflix.Notify.failure(\n    `❌ Rejected promise ${position} in ${new Date().getTime() - clickTime}ms`\n  )\n);\n\nlet clickTime = 0;\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  clickTime = new Date().getTime();\n\n  for (let i = 0; i < [amount.value]; i++) {\n    createPromise(2, delay.value).then(resolveHandler).catch(rejectHandler);\n  }\n  position = 0;\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$resolveHandler","result","$parcel$interopDefault","Notify","success","concat","Date","getTime","$ce04d3a99e08e73b$var$clickTime","$ce04d3a99e08e73b$var$rejectHandler","failure","addEventListener","event","preventDefault","i","value","then","catch"],"version":3,"file":"03-promises.35844e7d.js.map"}